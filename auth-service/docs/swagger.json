{
    "swagger": "2.0",
    "info": {
        "title": "Igaku Auth API",
        "contact": {},
        "version": "0.0.1"
    },
    "host": "localhost:8081",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticates a user via username and password. Returns a JWT token as plain text on success.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Login into the system",
                "parameters": [
                    {
                        "description": "User login credentials (username and password)",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.LoginCredentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully authenticated, returns JWT token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid request payload (e.g., missing fields, wrong format)",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid username or password",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to process login (e.g., database error)",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Registers a new user via username and password. Returns a JWT token as plain text on success.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register in the system",
                "parameters": [
                    {
                        "description": "User registration fields (username and password)",
                        "name": "fields",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.RegistrationFields"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully registered, returns JWT token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Conflict - Username already taken",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to process login (e.g., database error)",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Specific error message"
                }
            }
        },
        "dtos.LoginCredentials": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "P@ssw0rd!"
                },
                "username": {
                    "type": "string",
                    "example": "jdoe"
                }
            }
        },
        "dtos.RegistrationFields": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "jdoe@mail.com"
                },
                "password": {
                    "type": "string",
                    "example": "P@ssw0rd!"
                },
                "username": {
                    "type": "string",
                    "example": "jdoe"
                }
            }
        }
    }
}