definitions:
  dtos.AccountDetails:
    properties:
      email:
        example: jdoe@mail.com
        type: string
      role:
        example: patient
        type: string
      username:
        example: jdoe
        type: string
    required:
    - email
    - role
    - username
    type: object
  dtos.AccountDetailsWithID:
    properties:
      email:
        example: jdoe@mail.com
        type: string
      id:
        example: 0b6f13da-efb9-4221-9e89-e2729ae90030
        type: string
      role:
        example: patient
        type: string
      username:
        example: jdoe
        type: string
    type: object
  dtos.ErrorResponse:
    properties:
      error:
        example: Specific error message
        type: string
    type: object
  dtos.HelloOutput:
    properties:
      message:
        example: Hello world!
        type: string
    type: object
  dtos.PaginatedResponse:
    properties:
      data: {}
      page:
        type: integer
      page_size:
        type: integer
      total_count:
        type: integer
      total_pages:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  title: Igaku User API
  version: 0.0.1
paths:
  /hello:
    get:
      description: Returns a static hello world message as a JSON object.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.HelloOutput'
      summary: Show a hello message
      tags:
      - Hello
  /user/list:
    get:
      description: Retrieves a paginated list of all user accounts. Requires Admin
        privileges.
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        minimum: 1
        name: page
        type: integer
      - description: 'Number of items per page (default: 10)'
        in: query
        maximum: 100
        minimum: 1
        name: pageSize
        type: integer
      - description: 'Field name to be ordered by: id (default) or username'
        in: query
        name: orderBy
        type: string
      - description: 'Ordering method: asc (default) or desc'
        in: query
        name: orderMethod
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved list of accounts
          schema:
            allOf:
            - $ref: '#/definitions/dtos.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dtos.AccountDetailsWithID'
                  type: array
              type: object
        "400":
          description: Bad Request - Invalid query parameters (page, pageSize, orderBy,
            orderMethod)
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
        "401":
          description: Unauthorized - Invalid or missing token
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
        "403":
          description: Forbidden - User does not have Admin role
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
        "500":
          description: Internal Server Error - Failed to retrieve accounts
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
      security:
      - BearerAuth: []
      summary: List All Accounts (Admin)
      tags:
      - Accounts
  /user/self:
    get:
      description: Retrieves details (username, role, etc.) for the currently logged-in
        user based on the provided JWT.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved account details
          schema:
            $ref: '#/definitions/dtos.AccountDetails'
        "401":
          description: Unauthorized - Invalid or missing token
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
        "404":
          description: Not Found - User associated with token not found
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
        "500":
          description: Internal Server Error - Failed to retrieve account details
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Own Account Details
      tags:
      - Accounts
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
