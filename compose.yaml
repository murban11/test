services:
  api:
    container_name: igaku-api
    image: cosmtrek/air
    working_dir: /app
    command: ["-c", "api-service/air.api.toml"]
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=igaku-db
    ports:
      - 8080:8080
    volumes:
      - ./:/app/
    networks:
      - igaku-network
    depends_on:
      db:
        condition: service_healthy

  auth:
    container_name: igaku-auth
    image: cosmtrek/air
    working_dir: /app
    command: ["-c", "auth-service/air.auth.toml"]
    env_file:
      - .env
    ports:
      - 8081:8080
    volumes:
      - ./:/app/
    networks:
      - igaku-network

  db:
    container_name: igaku-db
    image: postgres
    restart: always
    env_file:
      - .env
    ports:
      - 5432:5432
    networks:
      - igaku-network
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 2s
      timeout: 2s
      retries: 3

networks:
  igaku-network:
    driver: bridge
